From 00dfab99f38adea4a4a54c41135a9b11c84be9b6 Mon Sep 17 00:00:00 2001
From: Isihimoto Shinobu <nagakamira@gmail.com>
Date: Fri, 20 Sep 2019 23:34:45 +0900
Subject: [PATCH] Add support for Ataraxia Linux

Signed-off-by: Isihimoto Shinobu <nagakamira@gmail.com>
---
 include/clang/Driver/Distro.h       |  5 +++++
 lib/Driver/Distro.cpp               |  3 +++
 lib/Driver/ToolChains/Linux.cpp     | 11 +++++++----
 lib/Driver/ToolChains/Linux.h       |  1 +
 lib/Frontend/CompilerInvocation.cpp |  8 ++++++++
 5 files changed, 24 insertions(+), 4 deletions(-)

diff --git a/include/clang/Driver/Distro.h b/include/clang/Driver/Distro.h
index 67dc764f..7c574780 100644
--- a/include/clang/Driver/Distro.h
+++ b/include/clang/Driver/Distro.h
@@ -27,6 +27,7 @@ public:
     // the first and last known member in the family, e.g. IsRedHat().
     AlpineLinux,
     ArchLinux,
+    AtaraxiaLinux,
     DebianLenny,
     DebianSqueeze,
     DebianWheezy,
@@ -129,6 +130,10 @@ public:
     return DistroVal == Gentoo;
   }
 
+  bool IsAtaraxiaLinux() const {
+    return DistroVal == AtaraxiaLinux;
+  }
+
   /// @}
 };
 
diff --git a/lib/Driver/Distro.cpp b/lib/Driver/Distro.cpp
index f2a3074d..c436ce71 100644
--- a/lib/Driver/Distro.cpp
+++ b/lib/Driver/Distro.cpp
@@ -145,6 +145,9 @@ static Distro::DistroType DetectDistro(llvm::vfs::FileSystem &VFS) {
   if (VFS.exists("/etc/gentoo-release"))
     return Distro::Gentoo;
 
+  if (VFS.exists("/etc/ataraxialinux-release"))
+    return Distro::AtaraxiaLinux;
+
   return Distro::UnknownDistro;
 }
 
diff --git a/lib/Driver/ToolChains/Linux.cpp b/lib/Driver/ToolChains/Linux.cpp
index d900508a..d48213f0 100644
--- a/lib/Driver/ToolChains/Linux.cpp
+++ b/lib/Driver/ToolChains/Linux.cpp
@@ -242,12 +242,12 @@ Linux::Linux(const Driver &D, const llvm::Triple &Triple, const ArgList &Args)
 
   Distro Distro(D.getVFS());
 
-  if (Distro.IsAlpineLinux() || Triple.isAndroid()) {
+  if (Distro.IsAlpineLinux() || Distro.IsAtaraxiaLinux() || Triple.isAndroid()) {
     ExtraOpts.push_back("-z");
     ExtraOpts.push_back("now");
   }
 
-  if (Distro.IsOpenSUSE() || Distro.IsUbuntu() || Distro.IsAlpineLinux() ||
+  if (Distro.IsOpenSUSE() || Distro.IsUbuntu() || Distro.IsAlpineLinux() || Distro.IsAtaraxiaLinux() ||
       Triple.isAndroid()) {
     ExtraOpts.push_back("-z");
     ExtraOpts.push_back("relro");
@@ -972,8 +972,11 @@ void Linux::AddIAMCUIncludeArgs(const ArgList &DriverArgs,
 }
 
 bool Linux::isPIEDefault() const {
-  return (getTriple().isAndroid() && !getTriple().isAndroidVersionLT(16)) ||
-          getTriple().isMusl() || getSanitizerArgs().requiresPIE();
+  return true;
+}
+
+unsigned Linux::GetDefaultStackProtectorLevel(bool KernelOrKext) const {
+  return 2;
 }
 
 bool Linux::isNoExecStackDefault() const {
diff --git a/lib/Driver/ToolChains/Linux.h b/lib/Driver/ToolChains/Linux.h
index 4c619946..e070415e 100644
--- a/lib/Driver/ToolChains/Linux.h
+++ b/lib/Driver/ToolChains/Linux.h
@@ -38,6 +38,7 @@ public:
                            llvm::opt::ArgStringList &CC1Args) const override;
   CXXStdlibType GetDefaultCXXStdlibType() const override;
   bool isPIEDefault() const override;
+  unsigned GetDefaultStackProtectorLevel(bool KernelOrKext) const override;
   bool isNoExecStackDefault() const override;
   bool IsMathErrnoDefault() const override;
   SanitizerMask getSupportedSanitizers() const override;
diff --git a/lib/Frontend/CompilerInvocation.cpp b/lib/Frontend/CompilerInvocation.cpp
index bc54e38a..576982c9 100644
--- a/lib/Frontend/CompilerInvocation.cpp
+++ b/lib/Frontend/CompilerInvocation.cpp
@@ -3421,6 +3421,14 @@ bool CompilerInvocation::CreateFromArgs(CompilerInvocation &Res,
   ParsePreprocessorOutputArgs(Res.getPreprocessorOutputOpts(), Args,
                               Res.getFrontendOpts().ProgramAction);
 
+  // Set the macro before the command line macros are being processed, so it can be
+  // properly unset if required to in case of incompatibilities.
+  if (Res.getCodeGenOpts().OptimizationLevel > 0 &&
+      (DashX.getLanguage() == InputKind::C || DashX.getLanguage() == InputKind::CXX) &&
+      !LangOpts.Sanitize.has(SanitizerKind::Address)) {
+    Res.getPreprocessorOpts().addMacroDef("_FORTIFY_SOURCE=2");
+  }
+
   // Turn on -Wspir-compat for SPIR target.
   if (T.isSPIR())
     Res.getDiagnosticOpts().Warnings.push_back("spir-compat");
-- 
2.20.1

